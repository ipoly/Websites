extends layout/html5

block title
    | ui一览

block main
    h1.mb10.f24 按钮
    div.mb20
        - var types = ["","btnDark","btnBlue","btnOrange","btnRed","btnGreen"]
        p.mb5
            each type in types
                button.btn(class=type)
                    span button #{type}

        p.mb5
            each type in types
                a.btn(class=type)
                    span link #{type}

        p.mb5
            each type in types
                span.btn(class=type)
                    input(type="submit")
        p.mb5
            button.btn.btnRed.f24
                span
                    b.icon-warning.yellow
                    |警告

    h1.mb10.f24 表单验证
    form.mb20(action="")
        div.p5.cloneAble
            input.test(required,type="text",placeholder="required")
            button.btn.btnGreen.add(type="button")
                span 增加
            button.btn.btnRed.del(type="button")
                span 删除
        p.p5
            input(required,type="text",placeholder="required")
            input(required,type="email",placeholder="email")
            input(required,type="number",placeholder="number",min="-10",max="10",step=".5")
            input(type="phone",placeholder="phone")
            input(required,type="tel",placeholder="tel")
            input(required,type="url",placeholder="url")
            input(required,type="text",placeholder="ajax验证",ajaxValidation="json/validation.json",data-method="get")
        p.p5
            input(required,matched,type="password",placeholder="密码",name="pw")
        p.p5
            input(required,matched,type="password",placeholder="重复密码",name="pw")
        p
            span.p5(needone)
                each item in [1,2,3,4,5,6,7]
                    input(type="checkbox",name="fuck[]")
                    | dd
        span.btn.btnBlue
            input(type="submit")

    h1.mb10.f24 切换全选
    p.mb20.p5.toggleCheck
        label
            input.checkAll(type="checkbox",name="fuck[]")
            | 全选
        span.p5
            each item in [1,2,3,4,5,6,7]
                label
                    input(type="checkbox",name="fuck[]")
                    | dd

    h1.mb10.f24 Observer示例
    p.p5
        // 这是一个模板
        // 模板语法参见http://juicer.name
        script(type="text/juicer",name="optionItem")
            | {@each list as item}
            | <option value="${item.id}" {@if item.selected}selected{@/if}>${item.text}</option>
            | {@/each}

        // 这是一个模板
        script(type="text/juicer",name="checkboxItem")
            | {@each list as item}
            | <label><input type="checkbox" value="${item.id}" {@if item.selected}checked{@/if}>${item.text}</label>
            | {@/each}

        // 设置 autoload 属性以在页面载入时便请求数据
        // 作为被观察的对象，表单元素需要有 name 属性以便传递请求参数
        select(data-observer="#obTest1",name="aaa",data-item-after="optionItem",data-source="json/autoload.json",data-method="get",autoload)
            option 下面的项目是动态追加的

        select#obTest1(data-observer="#obTest2",name="bbb",data-template-name="optionItem",data-source="json/list.json",data-method="get")
            option 先选择地区

    // 除了在模板中设置 selected 和 checked 属性外，还可在容器上使用 data-selected 属性预设置选中的项目,注意须使用标准的json格式，双引号不可以用单引号代替。
    div.mb20#obTest2(data-template-name="checkboxItem",data-source="json/list.json",data-method="get",data-selected='["b4","b7"]')

    h1.mb10.f24 长度控制示例
    div.mb20.p5.lengthCtrl
        textarea(maxlength="40")
        div 还可输入<span class="lengthLeft">40</span>个字符












