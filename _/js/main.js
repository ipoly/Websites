// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var tabMethod;
    if ($.browser.msie && $.browser.version === "6.0") {
      null;
    }
    if ($.browser.msie) {
      null;
    }
    $("input[type=number]").each(function() {
      var that, wrapper;
      that = $(this);
      wrapper = $("<span class='number'><i class='less'/><i class='more'/></span>");
      that.after(wrapper);
      return wrapper.find(".less").after(that);
    });
    $(".number").on("click", function(e) {
      var input, tango, val;
      tango = $(e.target);
      input = $("input", this);
      val = parseInt(input.val(), 10) || 0;
      if (tango.is(".less")) {
        val--;
      } else if (tango.is(".more")) {
        val++;
      }
      return input.val(val).trigger("change");
    });
    $("input[type=number]").on("change", function(e) {
      var max, min, that, val;
      that = $(this);
      val = parseInt(that.val(), 10) || 0;
      max = parseInt(that.attr("max"), 10);
      if (isNaN(max)) {
        max = +Infinity;
      }
      min = parseInt(that.attr("min"), 10);
      if (isNaN(min)) {
        min = -Infinity;
      }
      return that.val(Math.max(Math.min(val, max), min));
    });
    $("ol").each(function() {
      return $("i", this).each(function(i) {
        return $(this).addClass("o" + (i + 1));
      });
    });
    tabMethod = function(e) {
      var root, that;
      that = $(this);
      root = that.parents(".tab");
      that.addClass("on").siblings().removeClass("on");
      return root.find(".content > *").removeClass("on").eq(that.index()).addClass("on");
    };
    $(".tab").on("mouseenter", "header > :header", tabMethod).on("click", "header > label", tabMethod).find("header>*:first").trigger("click").trigger("mouseenter");
    $("table").on("click", function(e) {
      var tango;
      tango = $(e.target);
      if (tango.is(".selectAll")) {
        return $(":checkbox", this).attr("checked", !!tango.attr("checked"));
      }
    });
    window.alert = function(str) {
      var wraper;
      if (str) {
        wraper = $("<div/>");
        wraper.append(str).attr("title", $(str).attr("title") ? "注意" : void 0);
        return wraper.dialog({
          modal: true,
          show: "fade",
          hide: "fade",
          buttons: {
            "Ok": function() {
              return $(this).dialog("close");
            }
          }
        });
      }
    };
    $(".dialogBtn").on("click", function() {
      var that;
      that = $(this);
      if (this.dialog) {
        return this.dialog.dialog("open");
      } else {
        this.dialog = $(that.data("dialog-obj"));
        this.dialog = this.dialog.length ? this.dialog : that.next(".dialog");
        this.dialog.dialog({
          modal: true,
          show: "fade",
          hide: "fade",
          width: this.dialog.css("width")
        });
        return this.dialog.dialog("option", "dialogClass", this.dialog.data("dialogclass"));
      }
    });
    $(".dialogDef").dialog({
      modal: true,
      show: "fade",
      hide: "fade",
      buttons: {
        "Ok": function() {
          return $(this).dialog("close");
        }
      }
    });
    return $("form").on("invalid", ":input", function() {
      var that;
      that = $(this);
      that.focus().select();
      if (!this.validityMsg) {
        this.validityMsg = $('<span class="validityMsg"><span> <i></i> <strong></strong></span></span>');
        if (that.is(":checkbox,:radio")) {
          $("[name=" + that.attr("name") + "]:last").after(this.validityMsg);
        } else {
          that.after(this.validityMsg);
        }
      }
      return this.validityMsg.addClass("invalid").find("strong").html(this.validationMessage);
    }).on("change", ":input", function() {
      var _ref;
      if ((_ref = this.validityMsg) != null) {
        _ref.removeClass("invalid");
      }
      return setTimeout($.proxy(function() {
        this.checkValidity();
        if (!this.validity.valid) {
          return $(this).trigger("invalid");
        }
      }, this), 0);
    });
  });

}).call(this);
