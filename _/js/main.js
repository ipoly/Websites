// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var tabMethod;
    if ($.browser.msie && $.browser.version === "6.0") {
      null;
    }
    if ($.browser.msie) {
      null;
    }
    $("[data-group]").each(function() {
      var lis;
      lis = $("li", this);
      lis.filter(":nth-child(5n)").addClass("dashed");
      return lis.filter(function(i) {
        return i % 10 < 5;
      }).addClass("gray");
    });
    $(".toggle").on("click", function() {
      return $(this).addClass("on");
    }).on("mouseleave", function() {
      return $(this).removeClass("on");
    });
    setInterval(function() {
      var D, H, M, S, countDown, d, deadLine, h, m, now, restTime;
      countDown = $("#countDown");
      deadLine = new Date(countDown.data("deadline"));
      now = new Date();
      restTime = new Date(deadLine - now) / 1000;
      m = 60;
      h = m * 60;
      d = h * 24;
      D = Math.min(Math.floor(restTime / d), 99);
      restTime %= d;
      H = Math.floor(restTime / h);
      restTime %= h;
      M = Math.floor(restTime / m);
      S = parseInt(restTime % m, 10);
      return countDown.html("			<p>2012年12月自考倒计时</p>			<i class='D'>" + D + "</i>			<i class='H'>" + H + "</i>			<i class='M'>" + M + "</i>			<i class='S'>" + S + "</i>			");
    }, 1000);
    $("input[type=number]").each(function() {
      var that, wrapper;
      that = $(this);
      wrapper = $("<span class='number'><i class='less'/><i class='more'/></span>");
      that.after(wrapper);
      return wrapper.find(".less").after(that);
    });
    $(".number").on("click", function(e) {
      var input, tango, val;
      tango = $(e.target);
      input = $("input", this);
      val = parseInt(input.val(), 10) || 0;
      if (tango.is(".less")) {
        val--;
      } else if (tango.is(".more")) {
        val++;
      }
      return input.val(val).trigger("change");
    });
    $("input[type=number]").on("change", function(e) {
      var max, min, that, val;
      that = $(this);
      val = parseInt(that.val(), 10) || 0;
      max = parseInt(that.attr("max"), 10);
      if (isNaN(max)) {
        max = +Infinity;
      }
      min = parseInt(that.attr("min"), 10);
      if (isNaN(min)) {
        min = -Infinity;
      }
      return that.val(Math.max(Math.min(val, max), min));
    });
    $("ol").each(function() {
      return $("i", this).each(function(i) {
        return $(this).addClass("o" + (i + 1));
      });
    });
    $(".ul1").find(">*:even").addClass("even");
    tabMethod = function(e) {
      var root, that;
      that = $(this);
      root = that.parents(".tab");
      that.addClass("on").siblings().removeClass("on");
      return root.find(".content > *").removeClass("on").eq(that.index()).addClass("on");
    };
    $(".tab").on("mouseenter", "header > *:not(label)", tabMethod).on("click", "header > label", tabMethod).find("header>label:first").trigger("click").trigger("mouseenter");
    $("label:has(:input)").on("click", function(e) {
      var t;
      if (e.target === this) {
        t = $(this);
        t.toggleClass("on");
        return t.find(":input").attr("checked", t.is(".on"));
      }
    });
    $(".submit").on("click", function() {
      $(this).parents("form").trigger("submit");
      return false;
    });
    $("table").on("click", function(e) {
      var tango;
      tango = $(e.target);
      if (tango.is(".selectAll")) {
        return $(":checkbox", this).attr("checked", !!tango.attr("checked"));
      }
    });
    $("form").on("invalid", ":input", function() {
      var that;
      that = $(this);
      that.focus().select();
      if (!this.validityMsg) {
        this.validityMsg = $('<span class="validityMsg"><span> <i></i> <strong></strong></span></span>');
        if (that.is(":checkbox,:radio")) {
          $("[name=" + that.attr("name") + "]:last").after(this.validityMsg);
        } else {
          that.after(this.validityMsg);
        }
      }
      return this.validityMsg.addClass("invalid").find("strong").html(this.validationMessage);
    }).on("change", ":input", function() {
      var _ref;
      if ((_ref = this.validityMsg) != null) {
        _ref.removeClass("invalid");
      }
      return setTimeout($.proxy(function() {
        this.checkValidity();
        if (!this.validity.valid) {
          return $(this).trigger("invalid");
        }
      }, this), 0);
    });
    return $("#imgSlider").jqFancyTransitions({
      width: 250,
      height: 250,
      links: true,
      navigation: true
    });
  });

}).call(this);
