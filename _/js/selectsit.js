// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var Area, AreaMap, Sit, SitSelector;
    Sit = (function() {

      function Sit(data) {
        var _ref, _ref1, _ref2;
        this.elStr = "<label class='" + ((_ref = data.Rank) != null ? _ref : data.Rank = '') + " " + ((_ref1 = data.Color) != null ? _ref1 : data.Color = '') + " " + ((_ref2 = data.Sold) != null ? _ref2 : data.Sold = '') + "' style='left:" + (data.x * 1.3 - 20) + "px;top:" + (data.y * 1.3) + "px;'>						<input type='checkbox' name='sitID' value='" + data.ID + "'/>						</label> ";
      }

      return Sit;

    })();
    Area = (function() {

      function Area(data) {
        this.setSitMap = __bind(this.setSitMap, this);
        this.el = $("<label style='left:" + data.x + "px;top:" + data.y + "px;width:" + data.Width + "px;height:" + data.Height + "px;background:#" + data.Color + ";'>						<input type='radio' name='areaID' value='" + data.ID + "'/>						test						</label>						");
        this.stage = $("<span class='stage' style='left:" + data.StageX + "px;top:" + data.StageY + "px;line-height:" + (data.StageWidth * 10) + "px;height:" + (data.StageWidth * 10) + "px;width:" + (data.StageHeight * 10) + "px;'>舞台</span>");
        this.el.data(data);
        this.el.data("model", this);
      }

      Area.prototype.setSitMap = function(data) {
        var sitMapStr, sits;
        sitMapStr = "				<form title='" + data[0].PartitionName + "' class='sitMap' action='" + (this.el.attr('action')) + "' method='" + (this.el.attr('method')) + "'>					<section>					</section>				</form>			";
        this.sitMap = $(sitMapStr);
        this.sitMap.append(this.stage);
        sits = juicer("				{$each list as i}				<label class='' style='left:${i.x}px;top:${i.y}px;'>				<input type='checkbox' name='sitID' value='${i.ID}'/>				</label> 				{$/each}				", {
          list: data
        });
        console.log(new Date());
        this.sitMap.append(sits);
        console.log(new Date());
        $(".sitSelector").after(this.sitMap);
        console.log(new Date());
        this.sitMap.dialog({
          modal: true,
          width: 996,
          height: 600
        });
        return console.log(new Date());
      };

      return Area;

    })();
    AreaMap = (function() {

      function AreaMap(data) {
        var _ref;
        this.el = $("<section class='areaMap'><img src='" + ((_ref = data[0]) != null ? _ref.PlanImage : void 0) + "'/></section>");
        this.areas = [];
        if (data) {
          this.addArea(data);
        }
      }

      AreaMap.prototype.addArea = function(data) {
        var i, newAreas, _i, _len, _results;
        if ($.isArray(data)) {
          newAreas = (function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = data.length; _i < _len; _i++) {
              i = data[_i];
              _results.push(new Area(i));
            }
            return _results;
          })();
        } else {
          newAreas = [new Area(data)];
        }
        this.areas = this.areas.concat(newAreas);
        _results = [];
        for (_i = 0, _len = newAreas.length; _i < _len; _i++) {
          i = newAreas[_i];
          _results.push(this.el.append(i.el));
        }
        return _results;
      };

      return AreaMap;

    })();
    SitSelector = (function() {

      function SitSelector(el) {
        this.getSitMap = __bind(this.getSitMap, this);

        var areasData;
        this.el = $(el);
        this.el.on("click", this.getSitMap);
        areasData = $.parseJSON(this.el.find("script[type$=json]").html());
        if (areasData) {
          this.areaMap = new AreaMap(areasData);
          this.el.append(this.areaMap.el);
        }
      }

      SitSelector.prototype.getSitMap = function(e) {
        var tango;
        tango = $(e.target);
        if (tango.is("label")) {
          return $[this.el.attr("method") || "post"](this.el.data("source"), this.el.serializeArray(), tango.data("model").setSitMap, "json").fail(this.ajaxFail);
        }
      };

      SitSelector.prototype.ajaxFial = function(a, b, c) {
        return $.error(b);
      };

      return SitSelector;

    })();
    return $(".sitSelector").each(function() {
      return new SitSelector(this);
    });
  });

}).call(this);
